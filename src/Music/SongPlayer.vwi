
{
    // Replace 'YOUR_API_KEY' with your actual YouTube Data API key
    const API_KEY = 'AIzaSyCnneEaajE8zqEWVTMD1XhkKwgoWuzhn6w';

    // Load YouTube IFrame Player API
    function loadYouTubeIframeAPI() {
        return new Promise((resolve) => {
            const tag = document.createElement('script');
            tag.src = "https://www.youtube.com/iframe_api";
            const firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

            // Resolve the promise when the API is ready
            window.onYouTubeIframeAPIReady = () => {
                resolve();
            };
        });
    }

    // Create a YouTube player
    let player;
    function initializeYouTubePlayer() {
        return new Promise((resolve) => {
            player = new YT.Player('player', {
                height: '0',  // Set height and width to 0 to make it invisible
                width: '0',
                events: {
                    'onReady': (event) => {
                        console.log('YouTube Player is ready.');
                        resolve();
                    }
                }
            });
        });
    }

    // Function to search for a song and play it
    function searchAndPlay(song) {
        const searchUrl = `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&q=${encodeURIComponent(song)}&key=${API_KEY}`;

        fetch(searchUrl)
            .then(response => response.json())
            .then(data => {
                if (data.items && data.items.length > 0) {
                    const videoId = data.items[0].id.videoId;
                    playVideo(videoId);
                } else {
                    console.log('No results found');
                }
            })
            .catch(error => {
                console.error('Error fetching data:', error);
            });
    }

    // Function to play a video by its ID
    function playVideo(videoId) {
        if (player && typeof player.loadVideoById === 'function') {
            player.loadVideoById(videoId);
        } else {
            console.error('Player is not ready or loadVideoById is not a function');
        }
    }

    // Main function to be called when needed
    async function setupYouTubePlayer() {
        const playerDiv = document.createElement('div')
        playerDiv.id = 'player'
        document.body.appendChild(playerDiv)
        await loadYouTubeIframeAPI();
        await initializeYouTubePlayer();
    }

    // Example usage: To be called when you want to search and play a song
    async function playSong(prompt) {
        await setupYouTubePlayer();
        searchAndPlay(prompt);
    }

    // Usage:
    // Call playSong('Bohemian Rhapsody') when you want to search and play the song

}

