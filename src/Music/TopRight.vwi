

{
    const TopRightSTTButton = document.getElementById('SpeechToTextButton');
    const TopRightSTTTranscript = document.getElementById('SpeechToTextTranscript');

    // Check for browser support
    if ('webkitSpeechRecognition' in window) {
        const recognition = new webkitSpeechRecognition();
        recognition.continuous = false; // Set to true if you want continuous results
        recognition.interimResults = false; // Set to true if you want interim results
        recognition.lang = 'en-US'; // Set language

        // Handle recognition results
        recognition.onresult = event => {
            const result = event.results[0][0].transcript;
            document.getElementById('SpeechToTextTranscript').innerHTML = result;
            speechToTextResult(result)
        };

        // Handle recognition errors
        recognition.onerror = function(event) {
            console.error('Error occurred in recognition: ', event.error);
        };

        // Update button text when recognition ends
        recognition.onend = function() {
            recognizing = false;
            TopRightSTTButton.innerHTML = Icon("microphone")
            // TopRightSTTTranscript.style.display = "none"
        };

        let recognizing = false;

        function speechToText() {
            if (recognizing) {
                recognition.stop();
                TopRightSTTButton.innerHTML = Icon("microphone")
                TopRightSTTTranscript.style.display = "none"
            } 
            else {
                recognition.start();
                TopRightSTTButton.innerHTML = Icon("stop")
                TopRightSTTTranscript.innerHTML = ""
                TopRightSTTTranscript.style.display = "block"
            }
            recognizing = !recognizing;
        }

        TopRightSTTButton.addEventListener('click', speechToText);
    }

    function speechToTextResult(result) {
        chatGPT(`analyze whether the following response is asking to play a song / artist / album, respond like format A, else response like format B
        format A: { "type": (song / artist / album, whichever was requested), "response": (value, so the actual song title, or album title, etc.) }
        format B: { "type": "general", "response": (the answer to whatever was asked) }
        response: "${result}"
        `)
            .then(response => {
                // let res = JSON.parse(response)
                // console.log(res.type)
            })
            .catch(error => { })

    }
}

Grid
    width: 50vw
    grid-column: auto min-content
    justify-content: right
    gap: 1.5rem

    Block
        align: right

        Text: This is the transcript of what i am saying right now
            @id: SpeechToTextTranscript
            height: fit-content
            width: fit-content
            padding: 1.5rem
            background: [primary50]
            backdrop-filter: blur(1.5rem)
            border-radius: 0.75rem
            display: none

    VStack
        @id: SpeechToTextButton
        height: fit-content
        padding: 1.5rem
        background: [primary50]
        backdrop-filter: blur(1.5rem)
        border-radius: 100rem
        
        Text: {Icon("microphone")}

.TopRightMenuButton
    padding: 1.5rem

Wrapper