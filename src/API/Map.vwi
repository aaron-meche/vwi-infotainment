
ImportJSURL: api.mapbox.com/mapbox-gl-js/v3.5.1/mapbox-gl.js
ImportCSSURL: api.mapbox.com/mapbox-gl-js/v3.5.1/mapbox-gl.css

{
    mapboxgl.accessToken = 'pk.eyJ1IjoiYWFyb25tZWNoZSIsImEiOiJjbHlucHluNGYwOG1iMmtwcHN5ZmphMjU0In0.ZOvtm2moRAxAlLVWA4YDVQ';
    store.safety("position", {coords: {longitude: 0, latitude: 0}})
    store.safety("active theme", 2)
    store.safety("speed", 0)
    store.safety("speed limit", 0)

    const dev_locations = {
        "Moss Bluff": () => { // LA 378 W, Moss Bluff LA
            store.set("position lat", 30.30061)
            store.set("position long", -93.19966)
            store.set("heading", 270)
        },
        "Westlake": () => { // I-10 E, Lake Charles LA
            store.set("position lat", 30.235925)
            store.set("position long", -93.2)
            store.set("heading", 90)
        },
        "Iowa": () => { // I-10 E, Iowa
            store.set("position lat", 30.24895)
            store.set("position long", -93.01808)
            store.set("heading", 85)
        },
        "Shreveport": () => { // I-49 S into 220 E, Shreveport LA
            store.set("position lat", 32.53864)
            store.set("position long", -93.79588)
            store.set("heading", 185)
        }, 
        "Rockton": () => { // Rockton Rd E, Rockton IL
            store.set("position lat", 42.45552)
            store.set("position long", -89.07037)
            store.set("heading", 90)
        }, 
        "Milwaukee": () => { // Water St N, Milwaukee WI
            store.set("position lat", 43.03896)
            store.set("position long", -87.90914)
            store.set("heading", 355)
        },
        "Madison": () => { // W Washington Ave N, Madison WI
            store.set("position lat", 43.07162)
            store.set("position long", -89.38851)
            store.set("heading", 47)
        },
        "Manhattan": () => { // Park Ave N, Manhattan NY
            store.set("position lat", 40.73995)
            store.set("position long", -73.98648)
            store.set("heading", 28)
        },
        "Dallas": () => { // I 30 E, Dallas TX
            store.set("position lat", 32.75950)
            store.set("position long", -97.09440)
            store.set("heading", 90)
        },
        "Seattle": () => { // I 5 N, Seattle WA
            store.set("position lat", 47.60956)
            store.set("position long", -122.33084)
            store.set("heading", 0)
        },
    }
    dev_locations["Milwaukee"]()

    const map_styles = [
        "mapbox://styles/aaronmeche/clyp7z96b007x01qn4rx6fmbb",
        "mapbox://styles/aaronmeche/clyp7zcxx027301p80cet1y8p",
        "mapbox://styles/aaronmeche/clyp7zbk9007y01qn07169in3",
        "mapbox://styles/aaronmeche/clyp85cpy029d01qj4xw772yi",
    ]

    let menuWidthOffset = 0
    const standard_map_config = () => {
        return {
            container: 'map',
            style: map_styles[3],
            center: [store.get("position long"), store.get("position lat")],
            bearing: store.get("heading"),
            offset: [menuWidthOffset, window.innerHeight * 0.35],
            zoom: 14.25,
            pitch: 58
        }
    }

    const map = new mapboxgl.Map(standard_map_config())

    const el = document.createElement('div')
    el.className = "marker"
 
    const marker = new mapboxgl.Marker(el).setLngLat([store.get("position long"), store.get("position lat")]).addTo(map);

    let lastPosition = null
    let targetPosition = { lat: store.get("position lat"), lng: store.get("position long") }
    let currentAnimationFrame = null

    if (navigator.geolocation) {
        navigator.geolocation.watchPosition(position => {
            const newLat = position.coords.latitude;
            const newLng = position.coords.longitude;
            const latDiff = Math.abs(newLat - store.get("position lat"));
            const lngDiff = Math.abs(newLng - store.get("position long"));
            const threshold = 0.0001;

            if (store.get("live follow") == "on") {
                // store.set("position lat", position.coords.latitude)
                // store.set("position long", position.coords.longitude)
                // store.set("heading", position.coords.heading || 0)
                store.set("speed", Math.ceil(Math.floor(position.coords.speed * 2.23694) || 0))
                targetPosition.lat = position.coords.latitude;
                targetPosition.lng = position.coords.longitude;
                updateAPIs()
                map.easeTo(standard_map_config())
            }

            
        }, error => {
            console.error('Error getting location: ', error);
        }, {
            enableHighAccuracy: true,
            maximumAge: 500,
            timeout: 27000
        });
    } 
    else {
        console.error('Geolocation is not supported by this browser.');
    }

    function updateAPIs() {
        // APIs
        updateFeaturesAPI()
        updateRoadAPI()
        updateCurrentElevationAPI()

        // TimeManager
        updateSunTimesAPI()
    }

    function handleUserInteraction() {
        store.set("live follow", "off")
    }

    map.on('dragstart', () => handleUserInteraction());
    map.on('pitchstart', () => handleUserInteraction());
    map.easeTo(standard_map_config())
    updateAPIs()

    function animateToPosition() {
        if (currentAnimationFrame) {
            cancelAnimationFrame(currentAnimationFrame);
        }
        const duration = 1000; // 1 second
        const startTime = performance.now();
        const startPosition = {
            lat: store.get("position lat"),
            lng: store.get("position long")
        };

        function animate(time) {
            const elapsed = time - startTime;
            const t = Math.min(elapsed / duration, 1); // Calculate the progress ratio
            const currentLat = startPosition.lat + (targetPosition.lat - startPosition.lat) * t;
            const currentLng = startPosition.lng + (targetPosition.lng - startPosition.lng) * t;
            marker.setLngLat([currentLng, currentLat]);
            if (store.get("live follow") == "on") {
                map.easeTo({
                    center: [currentLng, currentLat],
                    bearing: store.get("heading"),
                    duration: 0, // No additional duration for the map easing
                    offset: [menuWidthOffset, window.innerHeight * 0.35],
                    zoom: 15,
                    pitch: 64.5
                });
            }
            if (t < 1) {
                currentAnimationFrame = requestAnimationFrame(animate);
            } else {
                store.set("position lat", targetPosition.lat);
                store.set("position long", targetPosition.lng);
            }
        }

        currentAnimationFrame = requestAnimationFrame(animate);
    }
}

// MAIN MAP
Block
    position: fixed
    top: 0
    left: 0
    height: 100vh
    width: 100vw
    z-index: 0

    Block
        @id: map
        height: 100%
        width: 100%

.marker
    position: absolute
    top: 0
    left: 0
    height: 1rem
    width: 1rem
    background: [blue]
    outline: solid 0.1rem white
    box-shadow: 0 0 1.5rem 0.25rem [blue]
    size: 25pt
    border-radius: 100vh